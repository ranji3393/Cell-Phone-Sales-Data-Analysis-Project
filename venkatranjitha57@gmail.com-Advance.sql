--Mobile manufacturer data analysis_ATM CASE STUDY ---

use db_SQLCaseStudies

--SQL Advance Case Study

	SELECT * FROM DIM_CUSTOMER
	SELECT * FROM DIM_DATE
	SELECT * FROM DIM_LOCATION
	SELECT * FROM DIM_MODEL
	SELECT * FROM FACT_TRANSACTIONS


--Q1--BEGIN 
---1. List all the states in which we have customers who have bought cellphones from 2005 till today.
	
	SELECT * FROM DIM_LOCATION
	SELECT * FROM FACT_TRANSACTIONS

	SELECT DISTINCT L.STATE AS STATE_NAME
	FROM DIM_LOCATION AS L
	INNER JOIN
	FACT_TRANSACTIONS AS FT
	ON L.IDLOCATION = FT.IDLOCATION
	WHERE DATEPART(YEAR, DATE) >=2005

--Q1--END



--Q2--BEGIN
	
---2. What state in the US is buying the most 'Samsung' cell phones?

	SELECT * FROM DIM_LOCATION
	SELECT * FROM FACT_TRANSACTIONS
	SELECT * FROM DIM_MODEL

	SELECT  DISTINCT TOP 1 L.STATE
	FROM DIM_LOCATION AS L
	INNER JOIN
	FACT_TRANSACTIONS AS FT
	ON L.IDLocation = FT.IDLocation

	INNER JOIN
	DIM_MODEL AS M
	ON FT.IDMODEL = M.IDMODEL
	WHERE COUNTRY = 'US'AND IDMANUFACTURER = '12'
	
--Q2--END



--Q3--BEGIN      
---	3. Show the number of transactions for each model per zip code per state. 

	SELECT * FROM FACT_TRANSACTIONS
	SELECT * FROM DIM_MODEL
	SELECT * FROM DIM_LOCATION


	SELECT L.[STATE], L.ZIPCODE, M. MODEL_NAME, COUNT(FT.QUANTITY) AS MODEL_COUNT
	FROM FACT_TRANSACTIONS AS FT
	INNER JOIN
	DIM_MODEL AS M
	ON FT.IDMODEL = M.IDMODEL

	INNER JOIN 
	DIM_LOCATION AS L
	ON FT.IDLOCATION = L.IDLOCATION
	GROUP BY M. MODEL_NAME,L.ZIPCODE, L.[STATE]

--Q3--END



--Q4--BEGIN

----4. Show the cheapest cellphone (Output should contain the price also)

	SELECT * FROM DIM_MODEL

	SELECT TOP 1 MODEL_NAME, UNIT_PRICE 
	FROM DIM_MODEL
	ORDER BY UNIT_PRICE ASC

--Q4--END



--Q5--BEGIN

---5. Find out the average price for each model in the top5 manufacturers in terms of sales quantity and order by average price. 

    SELECT * FROM DIM_MODEL
	SELECT * FROM FACT_TRANSACTIONS


	SELECT TOP 5 IDMANUFACTURER AS TOP_5_IDMANUFACTURER, MODEL_NAME, ROUND(AVG(TOTALPRICE),2) AS AVERAGE_PRICE, COUNT(QUANTITY) AS SALES_QUANTITY
	FROM DIM_MODEL AS M
	INNER JOIN
	FACT_TRANSACTIONS AS FT
	ON M. IDMODEL = FT. IDMODEL
	GROUP BY MODEL_NAME, IDMANUFACTURER
	ORDER BY ROUND(AVG(TOTALPRICE),2) DESC

--Q5--END



--Q6--BEGIN

----6. List the names of the customers and the average amount spent in 2009, where the average is higher than 500 

	SELECT * FROM DIM_CUSTOMER
	SELECT * FROM FACT_TRANSACTIONS
	SELECT * FROM DIM_DATE


	SELECT C.CUSTOMER_NAME, AVG(TOTALPRICE) AS AVERAGE_AMOUNT
	FROM DIM_CUSTOMER AS C
	INNER JOIN
	FACT_TRANSACTIONS AS FT
	ON C.IDCUSTOMER = FT.IDCUSTOMER

	INNER JOIN
	DIM_DATE AS D
	ON FT.DATE = D.DATE
	WHERE [YEAR] = 2009
	GROUP BY C.CUSTOMER_NAME, D.[YEAR]
	HAVING AVG(TOTALPRICE) > 500

--Q6--END
	


--Q7--BEGIN  
	
	--- 7. List if there is any model that was in the top 5 in terms of quantity, simultaneously in 2008, 2009 and 2010
	
	SELECT * FROM(
				SELECT TOP 5 IDMODEL
				FROM(
					SELECT IDMODEL, SUM(QUANTITY) AS QUANTITY
					FROM FACT_TRANSACTIONS AS FT
					WHERE DATEPART(YEAR, [DATE]) = 2008
					GROUP BY IDMODEL
					) AS X 
	ORDER BY QUANTITY DESC
	) AS Y
	

	INTERSECT

	SELECT * FROM(
				SELECT TOP 5 IDMODEL
				FROM(
					SELECT IDMODEL, SUM(QUANTITY) AS QUANTITY
					FROM FACT_TRANSACTIONS AS FT
					WHERE DATEPART(YEAR, [DATE]) = 2009
					GROUP BY IDMODEL
					) AS X 
	ORDER BY QUANTITY DESC
	) AS Y


	INTERSECT

	SELECT * FROM(
				SELECT TOP 5 IDMODEL
				FROM(
					SELECT IDMODEL, SUM(QUANTITY) AS QUANTITY
					FROM FACT_TRANSACTIONS AS FT
					WHERE DATEPART(YEAR, [DATE]) = 2010
					GROUP BY IDMODEL
					) AS X 
	ORDER BY QUANTITY DESC
	) AS Y


--Q7--END	


--Q8--BEGIN

----8. Show the manufacturer with the 2nd top sales in the year of 2009 and the manufacturer with the 2nd top sales in the year of 2010. 

	SELECT * FROM DIM_MODEL
	SELECT * FROM FACT_TRANSACTIONS

	
	SELECT * FROM (
	SELECT TOP 1 * FROM
	(
		SELECT TOP 2* FROM
				(
				SELECT IDMANUFACTURER, SUM(TotalPrice)	 AS SALES
				FROM DIM_MODEL AS M
				INNER JOIN
				FACT_TRANSACTIONS AS FT
				ON M.IDMODEL = FT.IDMODEL
				WHERE YEAR([DATE]) = 2009
				GROUP BY IDMANUFACTURER
				) AS  X
		ORDER BY SALES DESC
		) AS Y
	ORDER BY SALES ASC ) AS Z

	UNION 

	SELECT * FROM (
	
	SELECT TOP 1 * FROM
	(
		SELECT TOP 2 * FROM
				(
				SELECT IDMANUFACTURER, SUM(TotalPrice)	 AS SALES
				FROM DIM_MODEL AS M
				INNER JOIN
				FACT_TRANSACTIONS AS FT
				ON M.IDMODEL = FT.IDMODEL
				WHERE YEAR([DATE]) = 2010
				GROUP BY IDMANUFACTURER
				) AS  X
		ORDER BY SALES DESC ) AS Y
						ORDER BY SALES ASC ) AS Z 
--Q8--END



--Q9--BEGIN
	-----9. Show the manufacturers that sold cellphones in 2010 but did not in 2009. 

	SELECT * FROM DIM_MODEL
	SELECT * FROM FACT_TRANSACTIONS

	SELECT M. IDMANUFACTURER
	FROM DIM_MODEL AS M
	INNER JOIN
	FACT_TRANSACTIONS AS FT
	ON M.IDMODEL = FT.IDMODEL
	WHERE DATEPART(YEAR,[DATE]) = '2010'

	EXCEPT

	SELECT M. IDMANUFACTURER
	FROM DIM_MODEL AS M
	INNER JOIN
	FACT_TRANSACTIONS AS FT
	ON M.IDMODEL = FT.IDMODEL
	WHERE DATEPART(YEAR,[DATE]) = '2009'

--Q9--END



--Q10--BEGIN
	---- 10. Find top 10 customers and their average spend, average quantity by each year. Also find the percentage of change in their spend. 

	SELECT * FROM FACT_TRANSACTIONS

WITH TOP_10_CUSTOMER AS
	(
	SELECT * FROM(
	SELECT DENSE_RANK() OVER (PARTITION BY YEAR(DATE) ORDER BY YEAR(DATE), IDCUSTOMER, 
	AVG(TOTALPRICE) DESC, AVG(QUANTITY) DESC) AS RANKS,
	YEAR(DATE) AS YEARS, IDCUSTOMER, AVG(TOTALPRICE) AS AVG_SPEND, AVG(QUANTITY) AS AVG_QUANTITY
	FROM FACT_TRANSACTIONS
	GROUP BY YEAR(DATE) , IDCUSTOMER
	) AS X
	WHERE RANKS <=10
	),
YEAR_WISE_SPEND AS
	(
	SELECT *,
	LAG(AVG_SPEND, 1) OVER(PARTITION BY IDCUSTOMER ORDER BY YEARS, AVG_SPEND) AS PREV_SPEND
	FROM TOP_10_CUSTOMER
	WHERE IDCUSTOMER IN
	(SELECT IDCUSTOMER FROM TOP_10_CUSTOMER)
	)

SELECT *, (AVG_SPEND - PREV_SPEND) / AVG_SPEND * 100 AS [%AGE_SPEND_CHANGE]
FROM YEAR_WISE_SPEND

--Q10--END
	